<AML>
 <Item type="Method" id="C400338DA80046968FD23314DAAD6FA2" action="add">
  <execution_allowed_to keyed_name="World" type="Identity">A73B655731924CD0B027E4F4D5FCC0A9</execution_allowed_to>
  <method_code><![CDATA[// to be set on after get

//if (System.Diagnostics.Debugger.Launch()) System.Diagnostics.Debugger.Break();

// innovator
var inn = this.getInnovator();

string token= inn.getItemById("Variable","33E4B1E863BD4052B186D42D5F9B5AA8").getProperty("value","");
string gitLabUrl= inn.getItemById("Variable","49536CF1DED041C48488461525C93DD0").getProperty("value","");


// prepare the REST Call
string html = string.Empty;

var repoId = this.getProperty("source_id");
Item repo = inn.getItemById("SFT_repository",repoId);

HttpWebRequest request = (HttpWebRequest) WebRequest.Create(gitLabUrl+"api/v4/projects/"+repo.getProperty("gitlabid")+"/repository/tags");


request.Headers.Add("PRIVATE-TOKEN",token);

JObject Result;
using(HttpWebResponse response = (HttpWebResponse)request.GetResponse())
using(Stream stream = response.GetResponseStream())

// parse the result
using(StreamReader reader= new StreamReader(stream))
{
    html = reader.ReadToEnd();
    html = "{'tags':"+html+"}";
    Result = JObject.Parse(html);
}

IList<JToken> issueResults = Result["tags"].Children().ToList();

Item res = null;


// merge data
foreach (JToken tag in issueResults.Reverse()){
    
    var commit = inn.newItem("SFT_tags");
    commit.setID(inn.getNewID());
    commit = commit.apply();
    commit.setProperty("id", commit.getID());
    commit.setProperty("author_name",tag["commit"]["author_name"].ToString());
    commit.setProperty("author_email",tag["commit"]["author_email"].ToString());
    commit.setProperty("authored_date",tag["commit"]["authored_date"].ToString());
    commit.setProperty("committed_date",tag["commit"]["committed_date"].ToString());
    commit.setProperty("committer_name",tag["commit"]["committer_name"].ToString());
    commit.setProperty("committer_email",tag["commit"]["committer_email"].ToString());
    commit.setProperty("full_id",tag["commit"]["id"].ToString());
    commit.setProperty("message",tag["message"].ToString());
    if (tag["release"].HasValues){
        commit.setProperty("tag_name",tag["release"]["tag_name"].ToString());
        commit.setProperty("description",tag["release"]["description"].ToString());
        commit.setProperty("release","1");
    }else{
         commit.setProperty("release","0");
    }
    
    commit.setProperty("name",tag["name"].ToString());
    
    if(res == null)
        res = commit;
    else
        res.appendItem(commit);
}

return res;]]></method_code>
  <method_type>C#</method_type>
  <name>SFT_getGitLabTags</name>
 </Item>
</AML>